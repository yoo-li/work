<?php

$config_fields=array(
    'orders_id'=>array('label'=>"订单ID",'width'=>'10','align'=>'center'),
    'mall_orders_no'=>array('label'=>"订单号",'width'=>'15','align'=>'center'),
    'orders_detail'=>array('label'=>"订单详情",'width'=>'110','align'=>'center'),
    'supplierid'=>array('label'=>'供应商','width'=>'20','align'=>'center'),
    'profileid'=>array('label'=>"购货人",'width'=>'20','align'=>'center'),
    'consignee'=>array('label'=>"收货人",'width'=>'15','align'=>'center'),
    'mobile'=>array('label'=>"手机号",'width'=>'15','align'=>'center'),
    'customersmsg'=>array('label'=>'买家留言','width'=>'20','align'=>'center'),
    'province'=>array('label'=>"省",'width'=>'15','align'=>'center'),
    'city'=>array('label'=>"市",'width'=>'15','align'=>'center'),
    'district'=>array('label'=>"区/县/镇",'width'=>'20','align'=>'center'),
    'address'=>array('label'=>"详细地址",'width'=>'30','align'=>'center'),
    'orderstotal'=>array('label'=>"总额",'width'=>'10','align'=>'center'),
    'postage'=>array('label'=>"邮费",'width'=>'10','align'=>'center'),
    'isinvoice'=>array('label'=>"开票",'width'=>'10','align'=>'center'),
    'fapiaoname'=>array('label'=>"发票抬头",'width'=>'10','align'=>'center'),
    'singletime'=>array('label'=>"下单时间",'width'=>'20','align'=>'center'),
    'paymenttime'=>array('label'=>"付款时间",'width'=>'20','align'=>'center'),
    'order_status'=>array('label'=>"订单状态",'width'=>'10','align'=>'center'),
    'deliverytime'=>array('label'=>"发货时间",'width'=>'20','align'=>'center'),
    'delivery'=>array('label'=>"物流公司",'width'=>'15','align'=>'center'),
    'invoicenumber'=>array('label'=>"物流单号",'width'=>'20','align'=>'center'), 
);
$order_detail_header=array(
    'productname'=>array('label'=>'商品名称','width'=>'40','align'=>'center'),
    'internalno'=>array('label'=>'内部编号','width'=>'20','align'=>'center'),
    'categorys'=>array('label'=>'商品分类','width'=>'20','align'=>'center'),
    'property'=>array('label'=>'属性','width'=>'20','align'=>'center'),
    'price'=>array('label'=>'价格','width'=>'10','align'=>'center'),
    'royaltyrate'=>array('label'=>'提点','width'=>'10','align'=>'center'),
    'amount'=>array('label'=>'数量','width'=>'10','align'=>'center'),
    'returnamount'=>array('label'=>'退货数量','width'=>'10','align'=>'center')
);
$float_fields=array('orderstotal','postage','price','amount','returnamount','royaltyrate');
$float_index=array(6,7,8,9,19,20);
global $currentModule;
require_once('modules/'.$currentModule.'/'.$currentModule.'.php');
require_once('include/utils/utils.php');
require_once('include/utils/DataSearch.php');
require_once('modules/CustomView/CustomView.php');
$logistics=XN_Query::create("Content")
    ->tag("logistics")
    ->filter("type","eic","logistics")
    ->filter("my.deleted","=","0")
    ->execute();
$logistic_id_names=array();
foreach($logistics as $logistic_info){
    $logistic_id_names[$logistic_info->id]=$logistic_info->my->logisticsname;
}

if (isset($_REQUEST['ids']) && $_REQUEST['ids'] != "")
{	
	$ids = $_REQUEST['ids'];
	$ids = explode(",",trim($ids,','));
	array_unique($ids);
	$ids = array_filter($ids);
	$list_result = XN_Query::create('YearContent')->tag(strtolower($currentModule))
		->filter ( 'type', 'eic', strtolower($currentModule) )
		->filter ( 'id', 'in', $ids)
		->begin(0)->end(-1);
   $upperModule = strtoupper($currentModule);
   $order_by = 'singletime';
   $sorder = 'ASC';
   if(isset($_SESSION[$upperModule.'_ORDER_BY']) && $_SESSION[$upperModule.'_ORDER_BY'] != "")
   {
   	$order_by = $_SESSION[$upperModule.'_ORDER_BY'];
   }
   if(isset($_SESSION[$upperModule.'_SORT_ORDER']) && $_SESSION[$upperModule.'_SORT_ORDER'] != "")
   {
   	$sorder = $_SESSION[$upperModule.'_SORT_ORDER'];
   }
   $query_order_by = $order_by;
   if (isset($order_by) && $order_by != '' && strncmp($order_by,'my.',3)!=0 && $order_by != 'updateDate' && $order_by != 'createdDate' && $order_by != 'published' && $order_by != 'updated' && $order_by != 'author' && $order_by!= 'title')
   {
   	$query_order_by = "my.".$order_by;
   }
   
   if (strtolower($sorder) == 'desc'){
   	$list_result->order($query_order_by,XN_Order::DESC);
   }
   else
   {
   	$list_result->order($query_order_by,XN_Order::ASC);
   }
   $list_result = $list_result->execute();
    if(isset($_REQUEST['opr']) && $_REQUEST['opr'] == "checkstutas"){
        $params=array('ids'=>$_REQUEST['ids']);
        echo '{"statusCode":"200","message":null,"tabid":"'.$currentModule.'","callbackType":"SheetExportExcel","params":'.json_encode($params).',"forward":null}';
        die();
    }
    $order_results=array();

    $supplier_ids=array();
    $profile_ids=array();
    foreach($list_result as $info){
        $supplier_ids[]=$info->my->supplierid;
        $profile_ids[]=$info->my->profileid;
    }
    $supplier_ids = array_unique($supplier_ids);
	$profile_ids = array_unique($profile_ids);
	$profile_arrs=array(); 
    $profiles=XN_Profile::loadMany($profile_ids); 
    foreach($profiles as $info){
        $profile_arrs[$info->screenName]=$info->givenname;
    } 
    $suppliers=XN_Content::loadMany($supplier_ids,"suppliers");
    $supplier_arrs=array();
    foreach($suppliers as $info){
        $supplier_arrs[$info->id]=$info->my->suppliers_name;
    }

    $order_ids=array();
    foreach($list_result as $info){
        $order_ids[]=$info->id;
        foreach($config_fields as $fieldname=>$v){
            if($fieldname=='orders_id'){
                $order_results[$info->id][]=$info->id;
            }
            elseif($fieldname=='orders_detail'){
                $order_results[$info->id][]="";
            }elseif($fieldname=='supplierid'){
                $order_results[$info->id][]=$supplier_arrs[$info->my->supplierid];
            }elseif($fieldname=='profileid'){
                $profiledid=$info->my->profileid;
                $order_results[$info->id][]=$profile_arrs[$profiledid];
            }elseif($fieldname=='isinvoice'){
                if($info->my->isinvoice==0){
                    $order_results[$info->id][]="不开";
                }
                if($info->my->isinvoice==1){
                    $order_results[$info->id][]="单位";
                }
                if($info->my->isinvoice==2){
                    $order_results[$info->id][]="个人";
                }
            }elseif($fieldname=="delivery"){
                if($info->my->delivery!=""){
                    $order_results[$info->id][]=$logistic_id_names[$info->my->delivery];
                }else{
                    $order_results[$info->id][]="";
                }
            } 
            else{
                if(in_array($fieldname,$float_fields)){
                    $order_results[$info->id][]=floatval($info->my->$fieldname);
                }else{
                    $order_results[$info->id][]=$info->my->$fieldname;
                }
            }
        }
    }
    $orders_products=XN_Query::create("YearContent")
        ->tag("mall_orders_products")
        ->filter("type","eic","mall_orders_products")
        ->filter("my.orderid","in",$order_ids)
        ->filter("my.deleted","=",'0')
        ->end(-1)
        ->execute();
	
    $order_details=array();
	
    $product_ids=array();
	$category_ids = array();
    foreach($orders_products as $orders_product_info){
        $product_ids[]=$orders_product_info->my->productid;
		$category_ids[]=$orders_product_info->my->categorys; 
    }
    $product_ids = array_unique($product_ids);
	$category_ids = array_unique($category_ids);
	
	$categorynames=array();
    $category_arrs=XN_Content::loadMany($category_ids,"mall_categorys");
    foreach($category_arrs as $category_info){
        $categorynames[$category_info->id]=$category_info->my->categoryname;
    }
	
    $productinfos=array(); 
    $products=XN_Content::loadMany($product_ids,"mall_products"); 
   
    foreach($products as $product_info){
		$productid = $product_info->id;
        $productinfos[$productid]['productname']= $product_info->my->productname;
		$productinfos[$productid]['royaltyrate']= $product_info->my->memberrate;
		$productinfos[$productid]['internalno']= $product_info->my->internalno; 
    } 
	
    foreach($orders_products as  $info){ 
        $orderid = $info->my->orderid;
		$productid = $info->my->productid;
		$categoryid = $info->my->categorys;
        $order_details[$orderid][]=array($productinfos[$productid]['productname'],$productinfos[$productid]['internalno'],$categorynames[$categoryid],$info->my->propertydesc,floatval($info->my->shop_price),floatval($productinfos[$productid]['royaltyrate']),intval($info->my->quantity),intval($info->my->returnamount));
    }

	ob_clean();

    require_once ('include/PHPExcel/PHPExcel.php');
    require_once ('include/PHPExcel/PHPExcel/IOFactory.php');
    $objPHPExcel = new PHPExcel();
    $objPHPExcel->setActiveSheetIndex(0);
    $objPHPExcel->getActiveSheet()->setTitle(getTranslatedString($currentModule,$currentModule));
    $objPHPExcel->setActiveSheetIndex(0);
    $objPHPExcel->getActiveSheet()->getRowDimension(1)->setRowHeight(30);
    $objPHPExcel->getActiveSheet()->getRowDimension(2)->setRowHeight(20);
    $objPHPExcel->getActiveSheet()->getCell('A1')->setValue(getTranslatedString($currentModule,$currentModule));

    $objPHPExcel->getActiveSheet()->getStyle('A1')->getFont()->setBold(true);		// 加粗
    $objPHPExcel->getActiveSheet()->getStyle('A1')->getFont()->setSize(14);			// 字体大小
    $objPHPExcel->getActiveSheet()->getStyle('A1')->getFont()->setName('SIMSUN');
    $objPHPExcel->getActiveSheet()->getStyle('A1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    $objPHPExcel->getActiveSheet()->getStyle('A1')->getAlignment()->setVertical(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    $objPHPExcel->getActiveSheet()->mergeCellsByColumnAndRow(0,1,count($config_fields)+count($order_detail_header)-2,1);
    $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow(0,1,count($config_fields)+count($order_detail_header)-2,1)->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID);
    $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow(0,1,count($config_fields)+count($order_detail_header)-2,1)->getFill()->getStartColor()->setARGB('00F2F2F2');			// 底纹
    $objPHPExcel->getActiveSheet()->getCell('A2')->setValue("");
    $objPHPExcel->getActiveSheet()->getStyle('A2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    $objPHPExcel->getActiveSheet()->getStyle('A2')->getAlignment()->setVertical(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    $objPHPExcel->getActiveSheet()->mergeCellsByColumnAndRow(0,2,count($config_fields)+count($order_detail_header)-2,2);
    $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow(0,2,count($config_fields)+count($order_detail_header)-2,2)->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID);
    $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow(0,2,count($config_fields)+count($order_detail_header)-2,2)->getFill()->getStartColor()->setARGB('00F2F2F2');			// 底纹
    $i=0;

    foreach ($config_fields as $fieldname=>$order_field_info){
        $objPHPExcel->getActiveSheet()->getColumnDimensionByColumn($i)->setWidth($order_field_info['width']);
        $label = $order_field_info['label'];
        if($i<=1){
            $objPHPExcel->getActiveSheet()->mergeCellsByColumnAndRow($i,3,$i,4);
            $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($i,4)->getBorders()->getAllBorders()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
            $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($i,4)->getBorders()->getBottom()->setBorderStyle(PHPExcel_Style_Border::BORDER_NONE);
        }
        if($i==2){
            $objPHPExcel->getActiveSheet()->mergeCellsByColumnAndRow($i,3,$i+count($order_detail_header)-1,3);
            for($m=$i;$m<=count($order_detail_header)+1;$m++){
                $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($m,3)->getBorders()->getTop()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
            }
        }
        if($i>2){
            $objPHPExcel->getActiveSheet()->mergeCellsByColumnAndRow($i,3,$i,4);
            $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($i,4)->getBorders()->getAllBorders()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
            $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($i,4)->getBorders()->getBottom()->setBorderStyle(PHPExcel_Style_Border::BORDER_NONE);
        }
        $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($i,3)->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($i,3)->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID);
        $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($i,3)->getFill()->getStartColor()->setARGB('00F2F2F2');
        $objPHPExcel->getActiveSheet()->getCellByColumnAndRow($i,3)->setValue(getTranslatedString($label));
        $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($i,3)->getBorders()->getAllBorders()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
        $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($i,3)->getBorders()->getBottom()->setBorderStyle(PHPExcel_Style_Border::BORDER_NONE);
        $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($i,3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($i,3)->getAlignment()->setVertical(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        if($i==2){
            $i+=count($order_detail_header)-1;
        }
        $i++;
    }
    $k=2;
    foreach($order_detail_header as $fieldname=>$order_detail_info){
        $label=$order_detail_info['label'];
        $objPHPExcel->getActiveSheet()->getColumnDimensionByColumn($k)->setWidth($order_detail_info['width']);
        $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($k,4)->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($k,4)->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID);
        $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($k,4)->getFill()->getStartColor()->setARGB('00F2F2F2');
        $objPHPExcel->getActiveSheet()->getCellByColumnAndRow($k,4)->setValue(getTranslatedString($label));
        $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($k,4)->getBorders()->getAllBorders()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
        $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($k,4)->getBorders()->getBottom()->setBorderStyle(PHPExcel_Style_Border::BORDER_NONE);
        $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($k,4)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($k,4)->getAlignment()->setVertical(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        $k++;
    }
    $j=5;

    foreach($order_results as $key=>$row){
        $detail_info=$order_details[$key];
        for($i=0;$i<count($row)+count($order_detail_header)-1;$i++){
            if($i<=1){
                $label = $row[$i];
                if(count($detail_info)>1){
                    $objPHPExcel->getActiveSheet()->mergeCellsByColumnAndRow($i,$j,$i,$j+count($detail_info)-1);
                }
            }
            if($i>=2 && $i<=count($order_detail_header)+1){
                $label='';
                $label=$detail_info[0][$i-2];
            }
            if($i>count($order_detail_header)+1){
                if($i==26){
                    $objValidation = $objPHPExcel->getActiveSheet()->getCellByColumnAndRow($i,$j,$i,$j+count($detail_info)-1)->getDataValidation(); //这一句为要设置数据有效性的单元格
                    $objValidation -> setType(PHPExcel_Cell_DataValidation::TYPE_LIST)
                        -> setErrorStyle(PHPExcel_Cell_DataValidation::STYLE_INFORMATION)
                        -> setAllowBlank(false)
                        -> setShowInputMessage(true)
                        -> setShowErrorMessage(true)
                        -> setShowDropDown(true);
                }
                $label = $row[$i-count($order_detail_header)+1];
                if(count($detail_info)>1){
                    $objPHPExcel->getActiveSheet()->mergeCellsByColumnAndRow($i,$j,$i,$j+count($detail_info)-1);
                    for($t=$j;$t<$j+count($detail_info);$t++){
                        $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($i,$t)->getBorders()->getAllBorders()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
                        $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($i,$t)->getBorders()->getBottom()->setBorderStyle(PHPExcel_Style_Border::BORDER_NONE);
                        $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($i,$t)->getBorders()->getTop()->setBorderStyle(PHPExcel_Style_Border::BORDER_NONE);
                    }
                }
            }
            if(strpos($label, "<br>")){
                $tmp = explode('<br>', $label);
                $label = "";
                foreach ($tmp as $tv){
                    if($label == "")
                        $label .= getTranslatedString($tv,$currentModule);
                    else
                        $label .= "\r\n".getTranslatedString($tv,$currentModule);
                }
                $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($i,$j)->getAlignment()->setWrapText(true);
            }else{
                preg_match('/>([^<]+)</U',$label,$tmp);
                if(count($tmp)==0 && strpos($label, "</")){
                    $label = "";
                }elseif(isset($tmp[1]))
                    $label = $tmp[1];
            }
            if(in_array($i,$float_index)){
                $objPHPExcel->getActiveSheet()->getStyle(dechex($i).$j)->getNumberFormat()->setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_NUMBER);
            }
            $objPHPExcel->getActiveSheet()->getCellByColumnAndRow($i,$j)->setValueExplicit(getTranslatedString($label,$currentModule),PHPExcel_Cell_DataType::TYPE_STRING);
            $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($i,$j)->getBorders()->getAllBorders()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
            $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($i,$j)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($i,$j)->getAlignment()->setVertical(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        }
        $j++;
        if(count($detail_info)>1){
            for($n=1;$n<count($detail_info);$n++){
                for($p=0;$p<count($detail_info[$n]);$p++){
                    $label=$detail_info[$n][$p];
                    $objPHPExcel->getActiveSheet()->getCellByColumnAndRow(2+$p,$j)->setValueExplicit(getTranslatedString($label,$currentModule),PHPExcel_Cell_DataType::TYPE_STRING);
                    $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow(2+$p,$j)->getBorders()->getAllBorders()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
                    $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow(2+$p,$j)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow(2+$p,$j)->getAlignment()->setVertical(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                }
                $j++;
            }
        }
    }

    $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');

    header("Content-Type: application/vnd.ms-excel; charset=UTF-8");
    header("Expires: 0");
    header("Content-Type: application/force-download");
    header("Content-Type: application/octet-stream");
    header("Content-Type: application/download");
    header('Content-Disposition:inline;filename="'.$currentModule.'.xls"');//getTranslatedString($currentModule,$currentModule)
    header("Content-Transfer-Encoding: binary");
    header("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT");
    header('Cache-Control: must-revalidate, post-check=0, pre-check=0');
    header("Pragma: no-cache");
    $objWriter->save('php://output');
} 

